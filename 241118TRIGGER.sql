--성적 테이블 만들기
CREATE TABLE SUNG(
NO NUMBER(4),
NAME VARCHAR2(20) NOT NULL,
KOR NUMBER(4) NOT NULL,
ENG NUMBER(4) NOT NULL,
MATH NUMBER(4) NOT NULL,
TOTAL NUMBER(4),
AVG NUMBER(5,1),
RANK NUMBER(4)
);
ALTER TABLE SUNG ADD CONSTRAINT SUN_NO_PK PRIMARY KEY(NO);


--번호, 이름, 언,영,수 넣으면 합계, 평균까지 만들어주는 프로시저.
CREATE OR REPLACE PROCEDURE SUNG_TOTALT_AVG_PROC(NO NUMBER,NAME VARCHAR2,KOR IN NUMBER,ENG IN NUMBER, MATH IN NUMBER)
IS
SAL_AVG NUMBER(5,1);
SAL_TOTAL NUMBER(4);
BEGIN
SAL_AVG:=(KOR+ENG+MATH)/3;
SAL_TOTAL :=KOR+ENG+MATH;
INSERT INTO SUNG VALUES(NO, NAME, KOR, ENG, MATH, SAL_TOTAL,SAL_AVG,NULL);
END;
/

SELECT * FROM USER_TRIGGERS WHERE TABLE_NAME='SUNG';
--업데이트, 인서트 시 총점, 평균 수정해주는 트리거
CREATE OR REPLACE TRIGGER SUNG_INSERT_TRG
AFTER INSERT
ON
SUNG
BEGIN
UPDATE SUNG SET TOTAL=(KOR+ENG+MATH);
UPDATE SUNG SET AVG=(KOR+ENG+MATH)/3;
END;
/

UPDATE SUNG SET KOR=80 WHERE NO=12;
INSERT INTO SUNG(NO,NAME,KOR,ENG,MATH) VALUES(SUNG_SEQ.NEXTVAL,DBMS_RANDOM.STRING('U',3),DBMS_RANDOM.VALUE(0,100),DBMS_RANDOM.VALUE(0,100),DBMS_RANDOM.VALUE(0,100));



--점수 수정용 프로시져
CREATE OR REPLACE PROCEDURE SUNG_CHANGE_JUM_PROC(NNO IN NUMBER,NKOR IN NUMBER,NENG IN NUMBER, NMATH IN NUMBER)
IS
SAL_AVG NUMBER(5,1);
SAL_TOTAL NUMBER(4);
BEGIN
SAL_AVG:=(NKOR+NENG+NMATH)/3;
SAL_TOTAL :=NKOR+NENG+NMATH;
UPDATE SUNG SET KOR=NKOR,ENG=NENG,MATH=NMATH, AVG=SAL_AVG, TOTAL=SAL_TOTAL
WHERE NO=NNO;
END;
/


--랭크 설정해주는 프로시져
CREATE OR REPLACE PROCEDURE SUNG_RANK_PROC
IS
BEGIN
UPDATE SUNG S SET RANK=(SELECT S_RANK FROM(SELECT NO,RANK()OVER(ORDER BY AVG DESC) AS S_RANK FROM SUNG) WHERE S.NO=NO);
END;
/

--번호 자동 생성 시퀀스
CREATE SEQUENCE SUNG_SEQ
START WITH 1
INCREMENT BY 1
;


--정보를 삽입해주는 프로시저 실행
EXECUTE SUNG_TOTALT_AVG_PROC(SUNG_SEQ.NEXTVAL,DBMS_RANDOM.STRING('U',3),DBMS_RANDOM.VALUE(0,100),DBMS_RANDOM.VALUE(0,100),DBMS_RANDOM.VALUE(0,100));
--선택한 번호의 점수를 수정해주는 프로시저
EXECUTE SUNG_CHANGE_JUM_PROC(12, 60, 60,60);
--등수를 조정해주는 프로시저 실행
EXECUTE SUNG_RANK_PROC;
--조회
SELECT * FROM SUNG;
